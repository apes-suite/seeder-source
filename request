#!/bin/bash
#
# request
# =======
#
# Small script to ease the development with the nested seeder-source
# directory inside the seeder super repository.
#
# The idea is to work undisturbed on the musubi sources, and to not
# have to mind to the git submodule layout at all.
#
# Pre-Requisite: have github cli installed (https://cli.github.com/)
#
# Work as usual on the code in the mus subdirectory and have a branch
# for your changes.
# When it is ready to be put into a pull request, run request.
# It takes care of the superrepository and creates the corresponding
# pull requests.
#
# If you make changes that need to be pushed, you can run request on
# your branch again.
#
# request always uses the current branch you are working on in the
# mus subdirectory and the pull request is filled in by the commit
# message. There are no arguments it takes for its work.
#
# Please note that this is just a rough script, without bells and
# whistles, it is designed specifically for the one usage scenario,
# and probably easily confused.
#
# If you do provide arguments, those will be passed on to the git
# push command that is used in invocations of updating the PRs.
# It usually shouldn't be needed, but it allows you to force change
# the commits on the branch.
#
# *************************************************************************** #
#
# Copyright (c) 2024 Harald Klimach <harald.klimach@dlr.de>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHORS “AS IS” AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL UNIVERSITY OF SIEGEN OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# **************************************************************************** #

sdrdir=$(git rev-parse --show-toplevel)
owd=$(pwd)

if [ "$(basename $sdrdir)" = "sdr" ]; then

    sdrbranch=$(git branch --show-current)
    sdrmsg=$(git show --pretty=format:%s -s HEAD)
    echo $sdrbranch in $sdrdir
    echo "@: $sdrmsg"
    echo ""
    seederdir=$sdrdir/..
    seederbranch=$(cd $seederdir && git branch --show-current)

    if [ "$sdrbranch" = "main" ]; then
        echo "Not attempting to work on main branch!"
    else
        if output=$(git status --porcelain) && [ -z "$output" ]; then
            cd $seederdir
            if git checkout -b $sdrbranch 2>/dev/null; then
                git submodule set-branch -b $sdrbranch sdr
            else
                git checkout $sdrbranch
            fi
            git diff --quiet || git commit -a -m "$sdrmsg"

            if gh --version &>/dev/null; then
                # Create the pull request in the submodule (mus) if it does not exist yet.
                cd $sdrdir
                PRnum=$(gh pr status --json number,headRefName --jq '.currentBranch.number')
                if  [ -z "$PRnum" ]; then
                    gh pr create -d -a @me
                else
                    git push $@
                fi
                sdrPR=$(gh pr status --json number,headRefName --jq '.currentBranch.number')
                sdrPRtitle=$(gh pr status --json title --jq '.currentBranch.title')

                # Create the pull request in the supermodule (musubi) if it does not exist yet.
                cd $seederdir
                PRnum=$(gh pr status --json number,headRefName --jq '.currentBranch.number')
                if  [ -z "$PRnum" ]; then
                    gh pr create -d -t "$sdrPRtitle" -b "See [PR in seeder-source](https://github.com/apes-suite/seeder-source/pull/$sdrPR)."
                else
                    git push $@
                fi
            else
                echo ""
                echo "Need to install github cli (https://cli.github.com/) to create"
                echo "Pull request!"
                echo ""
            fi

        else
            echo ""
            echo "mus directory is not clean"
            echo "Please make sure that all your changes are committed!"
            echo ""
            git status
            echo ""
            echo "If you don't want the outstanding changes to be part"
            echo "of your request, stash them, do the request and pop"
            echo "them from thes stash again."
        fi
    fi
else
    echo "request only works for the mus directory!"
fi
cd $owd
